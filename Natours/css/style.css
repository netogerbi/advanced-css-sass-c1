/* ABSTRACTS */
/* BASE */
/* NORMALIZATION */
/* universal selector */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

/* 

This is a technique to convert all px units to rem
With this, if you change the value of font-size in html selector, all the page will change together.
so you can simply decide better designs in different sizes!

*/
html {
  font-size: 62.5%;
  /* used to convert all px units to rem */
  /* the percentual is just to accept users configuration */
  /* 62.5% = 10px */ }

body {
  box-sizing: border-box; }

/* ANIMATIONS */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translatex(10rem); }
  80% {
    transform: translatex(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInTop {
  0% {
    opacity: 0;
    transform: translatey(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  /* padding: 30px; */
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* fix unwanted shakes when transforming. In this case, this is the div that shakes sometimes */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

/* COMPONENTS */
.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  position: relative;
  transition: all .1s; }

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scalex(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff; }

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  top: 0;
  left: 0;
  position: absolute;
  z-index: -1;
  transition: all .4s; }

.btn--animated {
  animation: moveInTop .5s ease-out .75s;
  animation-fill-mode: backwards; }

/* LAYOUT */
.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    /* adjusting box position */
    top: 40%;
    /* related to parent element */
    left: 50%;
    /* related to parent element */
    transform: translate(-50%, -50%);
    /* related to the current element */
    text-align: center; }

.row {
  max-width: 114rem;
  background-color: #eee;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row:after {
    content: '';
    display: table;
    clear: both; }
  .row [class^="col-"] {
    background-color: orangered;
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 2rem; }
  .row .col-1-of-2 {
    width: calc((100% - 2rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 2rem) / 3); }
  .row .col-2-of-3 {
    width: calc(((100% - 2 * 2rem) / 3) * 2 + 2rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 2rem) / 4); }
  .row .col-2-of-4 {
    width: calc(((100% - 3 * 2rem) / 4) * 2 + 2rem); }
  .row .col-3-of-4 {
    width: calc(((100% - 3 * 2rem) / 4) * 3 + (2 * 2rem)); }

/* PAGES */
